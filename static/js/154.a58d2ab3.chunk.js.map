{"version":3,"file":"static/js/154.a58d2ab3.chunk.js","mappings":"2LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAsF,yBAAtF,EAAwH,0B,SCM3GA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,eAAaL,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEK,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMV,GACfE,UAAWC,EAHb,WAKE,gBACED,UAAWC,EACXQ,IACEJ,EAAW,0CAC4BA,GAjBrD,wHAoBYK,IAAKN,KAEP,uBAAIA,QAfCD,EADC,KAsBjB,C,yFChCD,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAsF,uB,SCCzEQ,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAO1B,OACE,kBAAMA,SAPW,SAAAC,GACjBA,EAAIC,iBAEJF,EAASC,EAAIE,OAAOC,SAASC,MAAMC,MACpC,EAG6BlB,UAAWC,EAAvC,WACE,kBACED,UAAWC,EACXkB,KAAK,QACLC,KAAK,OACLC,YAAY,kBAEd,mBAAQrB,UAAWC,EAASmB,KAAK,SAAjC,sBAKL,E,0BCOD,EAvBe,WACb,OAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACMC,EAAYJ,EAAaK,IAAI,UAEnCC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAeH,GAAWI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAChCN,EAAUM,EACX,GACF,GAAE,CAACL,IAKJ,OACE,iCACE,SAAChB,EAAD,CAAWC,SALU,SAAAM,GACvBM,EAA0B,KAAVN,EAAe,CAAED,MAAOC,GAAU,CAAC,EACpD,IAIIrB,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAGnC,C,sLCxBKoC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CAAEC,QAHI,sCAKHC,EAAiB,mCAAG,sGACRL,EAASL,IAAI,uBADL,uBACvBW,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAIjBT,EAAc,mCAAG,WAAMb,GAAN,yFACLgB,EAASL,IAAI,gBAAiB,CACnDQ,OAAQ,CAAEnB,MAAOA,KAFS,uBACpBsB,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAMdC,EAAY,mCAAG,WAAMrC,GAAN,yFACH8B,EAASL,IAAT,iBAAuBzB,IADpB,uBAClBoC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZE,EAAe,mCAAG,WAAMtC,GAAN,yFACN8B,EAASL,IAAT,iBAAuBzB,EAAvB,aADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKG,MAFiB,2CAAH,sDAIfC,EAAe,mCAAG,WAAMxC,GAAN,yFACN8B,EAASL,IAAT,iBAAuBzB,EAAvB,aADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKP,SAFiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","service/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__MPHyX\",\"item\":\"MovieList_item__K68oi\",\"title\":\"MovieList_title__C6WXq\",\"poster\":\"MovieList_poster__DcA4w\"};","import { Link, useLocation } from 'react-router-dom';\r\n\r\nimport css from './MovieList.module.css';\r\n\r\nconst imgPlaceholder =\r\n  'https://holstovich.art/content/images/1/1000x1000l80br20/kartina-russkiy-voennyy-korabl-idi-nakhy-50804578290634.webp';\r\n\r\nexport const MovieList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={css.list}>\r\n      {movies.map(({ id, title, poster_path }) => (\r\n        <li key={id} className={css.item}>\r\n          <Link\r\n            to={`/movies/${id}`}\r\n            state={{ from: location }}\r\n            className={css.title}\r\n          >\r\n            <img\r\n              className={css.poster}\r\n              src={\r\n                poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                  : imgPlaceholder\r\n              }\r\n              alt={title}\r\n            />\r\n            <p>{title}</p>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBox_form__GByKm\",\"input\":\"SearchBox_input__+nuoc\",\"btn\":\"SearchBox_btn__YGf58\"};","import css from './SearchBox.module.css';\r\n\r\nexport const SearchBox = ({ onSubmit }) => {\r\n  const submitForm = evt => {\r\n    evt.preventDefault();\r\n\r\n    onSubmit(evt.target.elements.query.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitForm} className={css.form}>\r\n      <input\r\n        className={css.input}\r\n        name=\"query\"\r\n        type=\"text\"\r\n        placeholder=\"Search films\"\r\n      />\r\n      <button className={css.btn} type=\"submit\">\r\n        Search\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import { MovieList } from 'components/MoviesList/MoviesList';\r\nimport { SearchBox } from 'components/SearchBox/SearchBox';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { getSearchMovie } from 'service/Api';\r\n\r\nconst Movies = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [movies, setMovies] = useState(null);\r\n  const movieName = searchParams.get('query');\r\n\r\n  useEffect(() => {\r\n    if (!movieName) return;\r\n    getSearchMovie(movieName).then(({ results }) => {\r\n      setMovies(results);\r\n    });\r\n  }, [movieName]);\r\n\r\n  const handleFormSubmit = value => {\r\n    setSearchParams(value !== '' ? { query: value } : {});\r\n  };\r\n  return (\r\n    <>\r\n      <SearchBox onSubmit={handleFormSubmit} />\r\n      {movies && <MovieList movies={movies} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '2edf3b0b9a6251ce074662ad615f2ff2';\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: { api_key: API_KEY },\r\n});\r\nexport const getTrendingMovies = async () => {\r\n  const { data } = await instance.get('/trending/movie/day');\r\n  return data;\r\n};\r\nexport const getSearchMovie = async query => {\r\n  const { data } = await instance.get('/search/movie', {\r\n    params: { query: query },\r\n  });\r\n  return data;\r\n};\r\nexport const getMovieById = async id => {\r\n  const { data } = await instance.get(`/movie/${id}`);\r\n  return data;\r\n};\r\nexport const getMovieCredits = async id => {\r\n  const { data } = await instance.get(`/movie/${id}/credits`);\r\n  return data.cast;\r\n};\r\nexport const getMovieReviews = async id => {\r\n  const { data } = await instance.get(`/movie/${id}/reviews`);\r\n  return data.results;\r\n};\r\n"],"names":["MovieList","movies","location","useLocation","className","css","map","id","title","poster_path","to","state","from","src","alt","SearchBox","onSubmit","evt","preventDefault","target","elements","query","value","name","type","placeholder","useSearchParams","searchParams","setSearchParams","useState","setMovies","movieName","get","useEffect","getSearchMovie","then","results","instance","axios","baseURL","params","api_key","getTrendingMovies","data","getMovieById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}